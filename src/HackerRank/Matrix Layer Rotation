"""
https://www.hackerrank.com/challenges/matrix-rotation-algo/problem
Implementation Problem
"""
#1. My Solution
def matrixRotation(matrix, r):
    def layerRotation(level, arr):
        mod = n * 2 + m * 2 - (2 * level + 1) * 4
        # print(level, mod)
        
        for i in range(mod):
            y, x = findloc(i, level)
            ni = (i+r) % mod
            ny, nx = findloc(ni, level)
            # print(i, y, x, ny, nx)
            
            arr[ny][nx] = matrix[y][x]
        
    def findloc(ind, level):
        nn = n - 2 * level
        mm = m - 2 * level
        if ind < nn - 1:
            # print('a')
            return level + ind, level
        elif ind < nn + mm - 2:
            # print('b')
            return level + nn - 1, level + ind - (nn - 1)
        elif ind < 2 * nn + mm - 3:
            # print('c')
            return level + nn - 1 - (ind - (nn + mm - 2)), level + mm - 1
        else:
            # print('d')
            return level, level + mm - 1 - (ind - (2 * nn + mm - 3))
        
    n = len(matrix)
    m = len(matrix[0])
    
    lvs = min(n, m) // 2
    new = [[0] * m for _ in range(n)]
    for l in range(lvs):
        layerRotation(l, new)
        
    [print(' '.join(map(str, r))) for r in new]
